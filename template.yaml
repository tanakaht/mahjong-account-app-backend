AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mahjong-account-app-backend
  Sample SAM Template for mahjong-account-app-backend

Parameters:
  StageName:
    Type: String
    AllowedValues:
      - dev
      - prod
      - local
    Default: dev
    Description: Stage name for the deployment
Mappings:
  StageMap:
    dev:
      stage: dev
      apipath: /dev
      dynamodbTableName: db-mahjong-account-app-dev
    prod:
      stage: dev
      apipath: /prod
      dynamodbTableName: db-mahjong-account-app-prod
    local:
      stage: local
      apipath: /prod
      dynamodbTableName: db-mahjong-account-app-local
Conditions:
  IsDev: !Equals [!Ref StageName, dev]
  IsProd: !Equals [!Ref StageName, prod]
  # IsLocal: !Equals [!Ref StageName, local]
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  # Cognito
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub mahjong-account-app-user-pool-${AWS::StackName}
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
      - email
      - preferred_username
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: false
      MfaConfiguration: "OFF"
      LambdaConfig:
        PostConfirmation: !Sub ${PostUsersConfirmationFunction.Arn}
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub mahjong-account-app-${AWS::StackName}
      UserPoolId: !Ref UserPool
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub mahjong-account-app-${AWS::StackName}
      GenerateSecret: false
      RefreshTokenValidity: 7
      UserPoolId:
        Ref: UserPool
  LambdaAddPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${PostUsersConfirmationFunction.Arn}
      Principal: cognito-idp.amazonaws.com


  # dynamoDB
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub mahjong-account-app-table-${AWS::StackName}
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: various_id
          AttributeType: S
        - AttributeName: base_table
          AttributeType: S
        - AttributeName: match_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: various_id
          KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: match_id
        KeySchema:
          - AttributeName: match_id
            KeyType: HASH
          - AttributeName: base_table
            KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
      LocalSecondaryIndexes:
      - IndexName: base_table
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: base_table
            KeyType: RANGE
        Projection:
          ProjectionType: ALL
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE



  # APIGW
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml # swaggerファイルのパス指定



  # Lambda

  GetUsersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_users/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/get-userinfo"
            Method: get
            RestApiId: !Ref RestApi

  PutUsersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/put_users/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/update-userinfo"
            Method: put
            RestApiId: !Ref RestApi

  DeleteUsersFriendsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/delete_users_friends/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/friends/delete-friend"
            Method: delete
            RestApiId: !Ref RestApi

  PostUsersRegisterGuestFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_users_register_guest/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/register-guest"
            Method: post
            RestApiId: !Ref RestApi

  GetUsersFriendsRequestFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_users_friend_request/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/friends/get-friend-request"
            Method: get
            RestApiId: !Ref RestApi


  PostUsersFriendsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_users_friends/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/friends/friend-request"
            Method: post
            RestApiId: !Ref RestApi

  PostRulesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_rules/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/rules/register-rule"
            Method: post
            RestApiId: !Ref RestApi

  PostUsersConfirmationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_users_confirmation/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/confirmation"
            Method: post
            RestApiId: !Ref RestApi

  GetMatchesCalculationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_matches_calculations/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/get-scoreboard"
            Method: get
            RestApiId: !Ref RestApi

  GetUsersFriendsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_users_friends/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/friends/get-friendlist"
            Method: get
            RestApiId: !Ref RestApi

  GetRulesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_rules/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/rules/get-rule"
            Method: get
            RestApiId: !Ref RestApi

  PostMatchesStartFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_matches_start/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/start"
            Method: post
            RestApiId: !Ref RestApi

  GetMatchesResumeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_matches_resume/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/resume-match"
            Method: get
            RestApiId: !Ref RestApi

  PostMatchesRoundFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_matches_round/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/register-round"
            Method: post
            RestApiId: !Ref RestApi

  GetMatchesResultsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/get_matches_results/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/get-results"
            Method: get
            RestApiId: !Ref RestApi

  DeleteMatchesRoundFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/delete_matches_round/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/delete-round"
            Method: delete
            RestApiId: !Ref RestApi


  DeleteMatchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/delete_match/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/delete-match"
            Method: delete
            RestApiId: !Ref RestApi


  PostMatchesEndFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_matches_end/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/matches/end"
            Method: post
            RestApiId: !Ref RestApi

  PostUsersFriendsAcceptFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/post_users_friends_accept/
      AutoPublishAlias: live
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Environment:
        Variables:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/users/friends/authorize-friend-request"
            Method: post
            RestApiId: !Ref RestApi

  # ApplicationInsights
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RestApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
